{"version":3,"sources":["components/Header.js","components/UserProfile.js","components/Footer.js","utils/GlobalState.js","utils/API.js","components/NewTask.js","components/Task.js","components/TasksContainer.js","components/NewLead.js","components/EditLead.js","components/ClientCard.js","components/Client.js","components/LeadsContainer.js","components/NewActivity.js","components/EditActivity.js","components/Activity.js","components/MiniCalendar.js","components/ActivityContainer.js","pages/Home.js","firebase.js","components/SignOut.js","components/SignIn.js","pages/Signup.js","App.js","index.js"],"names":["Header","title","tag","Jumbotron","className","style","backgroundColor","display","justifyContent","alignItems","height","marginBottom","padding","fontWeight","fontSize","Button","color","href","variant","UserProfile","name","jobTitle","userPic","Card","Img","margin","width","borderRadius","src","Body","Title","Text","ButtonGroup","vertical","to","Footer","role","aria-label","Date","getFullYear","target","rel","StoreContext","createContext","Provider","reducer","state","action","type","notes","payload","map","note","_id","filter","leads","lead","dates","date","selectedDate","console","log","user","StoreProvider","value","props","useReducer","dispatch","useStoreContext","useContext","axios","get","id","delete","noteData","post","put","leadData","dateData","NewTask","globalState","useState","show","setShow","titleRef","useRef","newTodoRef","handleClose","onClick","Modal","onHide","closeButton","Form","Group","controlId","Control","placeholder","ref","required","as","rows","e","preventDefault","API","current","body","completed","then","result","data","catch","err","handleNewTodo","Task","tasks","completeStyle","textDecoration","task","Accordion","key","Toggle","eventKey","notedata","taskItem","document","getElementById","parentElement","classList","add","addEventListener","handleRemoveTask","Collapse","Subtitle","format","TasksContainer","useEffect","NewLead","firstnameRef","lastnameRef","emailRef","phoneRef","imageRef","fontFamily","first","last","email","phone","image","handleNewLead","EditLead","client","ClientCard","maxHeight","listStyle","Image","thumbnail","Client","clients","LeadsContainer","NewActivity","activityRef","Label","activity","dateCreated","now","handleNewActivity","EditActivity","activityData","Activity","MiniCalendar","setDate","toDateString","onChange","ActivityContainer","float","Home","path","component","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP__APP_ID","measurementId","app","firebase","initializeApp","auth","firestore","SignOut","succesful","setSuccessful","signOut","SignIn","password","credentials","SetCredentials","signUp","setSignUp","errorMessage","setErrorMessage","a","signInWithEmailAndPassword","message","handleSignUp","createUserWithEmailAndPassword","handleInputChange","Container","boxShadow","background","onSubmit","Row","Col","Signup","position","bottom","App","localUser","setLocalUser","onAuthStateChanged","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.34180e8d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Style.css\";\nimport { Jumbotron, Button } from \"react-bootstrap\";\n\nfunction Header({ title, tag }) {\n  return (\n    <>\n      <Jumbotron\n        className=\"header-Jumbotron\"\n        style={{\n          backgroundColor: \" rgb(3, 73, 94)\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          height: \"100px\",\n          marginBottom: \"0px\",\n          padding: \"0\",\n        }}\n      >\n        <div className=\"header-head\">\n          <h1 style={{ fontWeight: \"bold\" }}>{title}</h1>\n          <p style={{ fontSize: \"17px\" }}>{tag}.</p>\n        </div>\n        <div className=\"signout-anchor mr-3 \">\n          <Button\n            className=\"signout-button\"\n            style={{\n              backgroundColor: \"#4C4646\",\n              color: \"white\",\n            }}\n            href=\"/signout\"\n            variant=\"light\"\n          >\n            Sign Out\n          </Button>\n          {/* <a href=\"/signout\">Sign Out</a> */}\n        </div>\n      </Jumbotron>\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Style.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction UserProfile({ name, jobTitle, userPic }) {\n  // this will be how we decide what to view based on button click\n\n  return (\n    <Card className=\"user-profile-card\">\n      <Card.Img\n        style={{\n          margin: \"20px auto\",\n          width: \"90%\",\n          borderRadius: \"5px\",\n        }}\n        className=\"image-styles\"\n        variant=\"top\"\n        src=\"https://i.pinimg.com/564x/98/6d/39/986d39470fae3b16f0ae38b551267367.jpg\"\n      />\n      <Card.Body>\n        <Card.Title>{name}</Card.Title>\n        <Card.Text>{jobTitle}</Card.Text>\n      </Card.Body>\n      <ButtonGroup className=\"button-group\" vertical>\n        <Button\n          style={{ backgroundColor: \"rgb(3, 73, 94)\" }}\n          className=\"user-button\"\n          name=\"task\"\n        >\n          <Link className=\"user-links\" to=\"/home/taskscomponents\">\n            Tasks\n          </Link>\n        </Button>\n\n        <Button\n          style={{ backgroundColor: \"rgb(3, 73, 94)\" }}\n          className=\"user-button\"\n          name=\"leads\"\n        >\n          <Link className=\"user-links\" to=\"/home/leadcomponents\">\n            Leads\n          </Link>\n        </Button>\n\n        <Button\n          style={{ backgroundColor: \"rgb(3, 73, 94)\" }}\n          className=\"user-button\"\n          name=\"calendar\"\n        >\n          <Link className=\"user-links\" to=\"/home/calendarcomponents\">\n            Calendar\n          </Link>\n        </Button>\n      </ButtonGroup>\n    </Card>\n  );\n}\n\nexport default UserProfile;\n","import React from \"react\";\nimport \"./Style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"row footer-div py-2\">\n      <div className=\"col-10\">\n        <span className=\"text-muted\">\n          Made with\n          <span role=\"img\" aria-label=\"Heart Emoji\">\n            ♥️\n          </span>{\" \"}\n          by Rick Smart, Danielle Cutler, Mostafa Alshammary.\n          <br />\n          &copy; {new Date().getFullYear()}\n        </span>\n      </div>\n\n      <div className=\"col-2\">\n        <a\n          href=\"https://github.com/Malsham3/Office-Space\"\n          target=\"_blank\"\n          className=\"fa fa-github fa-2x mr-1\"\n          rel=\"noopener noreferrer\"\n        ></a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { createContext, useReducer, useContext } from \"react\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOAD_TASKS\":\n      return {\n        ...state,\n        notes: action.payload,\n      };\n\n    case \"UPDATE_NOTES\":\n      return {\n        ...state,\n        notes: state.notes.map((note) => {\n          return note._id !== action.payload._id;\n        }),\n      };\n\n    case \"ADD_NOTE\":\n      return {\n        ...state,\n        notes: [action.payload, ...state.notes],\n      };\n\n    case \"REMOVE_NOTE\":\n      return {\n        ...state,\n        notes: state.notes.filter((note) => {\n          return note._id !== action.payload._id;\n        }),\n      };\n\n    case \"LOAD_LEADS\":\n      return {\n        ...state,\n        leads: action.payload,\n      };\n\n    case \"ADD_LEAD\":\n      return {\n        ...state,\n        leads: [action.payload, ...state.leads],\n      };\n\n    case \"UPDATE_LEAD\":\n      return {\n        ...state,\n        leads: [...state.leads],\n      };\n\n    case \"REMOVE_LEAD\":\n      return {\n        ...state,\n        leads: state.leads.filter((lead) => {\n          return lead._id !== action.payload._id;\n        }),\n      };\n    case \"LOAD_DATES\":\n      return {\n        ...state,\n        dates: action.payload,\n      };\n\n    case \"ADD_DATE\":\n      return {\n        ...state,\n        dates: [action.payload, ...state.dates],\n      };\n\n    case \"UPDATE_DATE\":\n      return {\n        ...state,\n        dates: state.dates.map((date) => {\n          return date._id !== action.payload._id;\n        }),\n      };\n\n    case \"REMOVE_DATE\":\n      return {\n        ...state,\n        dates: state.dates.filter((date) => {\n          return date._id !== action.payload._id;\n        }),\n      };\n\n    case \"SELECTED_DATE\":\n      return {\n        ...state,\n        selectedDate: action.payload,\n      };\n    case \"SET_USER\":\n      console.log(state)\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    notes: [],\n    leads: [],\n    dates: [],\n    selectedDate: \"\",\n    user: \"\",\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import axios from \"axios\";\n\nexport default {\n  // Gets all notes\n  getNotes: function () {\n    return axios.get(\"/api/note\");\n  },\n  // Gets the note with the given id\n  getNote: function (id) {\n    return axios.get(\"/api/note/\" + id);\n  },\n  // Deletes the note with the given id\n  deleteNote: function (id) {\n    return axios.delete(\"/api/note/\" + id);\n  },\n  // Saves a note to the database\n  saveNote: function (noteData) {\n    return axios.post(\"/api/note\", noteData);\n  },\n  // Updates a note to the database with the given up\n  updateNote: function (id, noteData) {\n    return axios.put(\"/api/note/\" + id, noteData);\n  },\n\n  // Gets all leads\n  getLeads: function () {\n    return axios.get(\"/api/leads\");\n  },\n  // Gets the lead with the given id\n  getLead: function (id) {\n    return axios.get(\"/api/leads/\" + id);\n  },\n  // Deletes the leads with the given id\n  deleteLead: function (id) {\n    return axios.delete(\"/api/leads/\" + id);\n  },\n  // Saves a lead to the database\n  saveLead: function (leadData) {\n    return axios.post(\"/api/leads\", leadData);\n  },\n  updateLead: function (id, leadData) {\n    return axios.put(\"/api/leads/\" + id, leadData);\n  },\n\n  // Gets all dates\n  getDates: function () {\n    return axios.get(\"/api/dates\");\n  },\n  // Gets the date with the given id\n  getDate: function (id) {\n    return axios.get(\"/api/dates/\" + id);\n  },\n  // Deletes the Date with the given id\n  deleteDate: function (id) {\n    return axios.delete(\"/api/dates/\" + id);\n  },\n  // Saves a date to the database\n  saveDate: function (dateData) {\n    return axios.post(\"/api/dates\", dateData);\n  },\n  // Updates a date to the database with the given up\n  updateDate: function (id, dateData) {\n    return axios.put(\"/api/dates/\" + id, dateData);\n  },\n};\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport API from \"../utils/API\";\nimport \"./Style.css\";\n\nfunction NewTask() {\n  // eslint-disable-next-line\n  const [globalState, dispatch] = useStoreContext();\n  const [show, setShow] = useState(false);\n  \n  const titleRef = useRef(\"\");\n  const newTodoRef = useRef(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleNewTodo = (e) => {\n    e.preventDefault();\n    console.log(globalState);\n    API.saveNote({\n      // user: globalState.user,\n      title: titleRef.current.value,\n      body: newTodoRef.current.value,\n      completed: false,\n    })\n      .then((result) => {\n        dispatch({\n          type: \"ADD_NOTE\",\n          payload: result.data,\n        });\n      })\n      .catch((err) => console.log(err));\n\n    titleRef.current.value = \"\";\n    newTodoRef.current.value = \"\";\n\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button\n        style={{ fontWeight: \"bold\" }}\n        className=\"new-task-button\"\n        variant=\"info\"\n        onClick={handleShow}\n      >\n        New Task\n      </Button>\n\n      <Modal className=\"task-modal\" show={show} onHide={handleClose}>\n        <Modal.Header\n          style={{ fontWeight: \"bold\", color: \"rgb(3, 73, 94)\" }}\n          closeButton\n        >\n          Add a Task\n        </Modal.Header>\n        <Form className=\"task-form\">\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Title\"\n              ref={titleRef}\n              required\n            />\n          </Form.Group>\n          <Form.Group\n            className=\"task-body\"\n            controlId=\"exampleForm.ControlTextarea1\"\n          >\n            <Form.Control\n              as=\"textarea\"\n              rows={2}\n              placeholder=\"Body\"\n              ref={newTodoRef}\n              required\n            />\n          </Form.Group>\n        </Form>\n        <Modal.Footer>\n          <Button\n            onClick={(e) => {\n              handleNewTodo(e);\n            }}\n            variant=\"info\"\n          >\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default NewTask;\n","import { Accordion, Card, Button } from \"react-bootstrap\";\nimport Moment from 'react-moment';\nimport \"./Style.css\";\nimport React from \"react\";\nimport API from \"../utils/API\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction Task({ tasks }) {\n  // eslint-disable-next-line\n  const [globalState, dispatch] = useStoreContext();\n\n  \n  function handleRemoveTask(id) {\n    const item = document.getElementById(id)\n    const taskItem = item.parentElement;\n    console.log(taskItem)\n    taskItem.classList.add(\"fall\");\n    taskItem.addEventListener('transitionend', function(){\n      API.deleteNote(id).then(({ data }) =>\n        dispatch({\n          type: \"REMOVE_NOTE\",\n          payload: data,\n        })\n      );\n    })\n  }\n\n  const completeStyle = {\n    color: \"black\",\n    fontSize: \"20px\",\n    textDecoration: \"red wavy line-through\",\n  };\n\n  function handleUpdateTask(id, notedata) {\n    notedata.completed = !notedata.completed\n    API.updateNote(id, notedata).then(({ data }) =>\n      dispatch({\n        type: \"UPDATE_NOTES\",\n        payload: data,\n      })\n    );\n  }\n\n  return (\n    // dynamically generate task row with a check box / button.\n    <>\n      {tasks.map((task) => (\n        <Accordion key={task._id}>\n          <Card id = {task._id}>\n            <Card.Header>\n              <Accordion.Toggle\n                style={\n                  task.completed\n                    ? completeStyle\n                    : { color: \"black\", fontSize: \"20px\" }\n                }\n                className=\"task-header\"\n                as={Button}\n                variant=\"link\"\n                eventKey=\"0\"\n              >\n                {task.title}\n              </Accordion.Toggle>\n              <Button\n                id=\"complete-task\"\n                variant=\"info\"\n                onClick={(e) => {\n                  handleUpdateTask(task._id, task);\n                }}\n              >\n                Complete ✓\n              </Button>\n              <Button\n                id=\"delete-task\"\n                variant=\"danger\"\n                onClick={() => {\n                  handleRemoveTask(task._id);\n                }}\n              >\n                X\n              </Button>\n            </Card.Header>\n            <Accordion.Collapse\n              style={{ fontSize: \"17px\", color: \"rgb(36, 35, 35)\" }}\n              eventKey=\"0\"\n            >\n              <Card.Body>\n                <Card.Subtitle className=\"text-muted mb-3\">\n                Date Created: {\" \"}\n                  <Moment format=\"ddd MM/DD/YY\">\n                  {task.date}\n                  </Moment>\n                  {\" \"}\n                  at \n                  {\" \"}\n                  <Moment format=\"hh:mm a\">\n                  {task.date}\n                  </Moment>\n                </Card.Subtitle>\n                {task.body}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      ))}\n    </>\n  );\n}\n\nexport default Task;\n","import React, { useEffect } from \"react\";\nimport { Accordion } from \"react-bootstrap\";\nimport NewTask from \"./NewTask\";\nimport Task from \"./Task\";\nimport API from \"../utils/API\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction TasksContainer() {\n  const [globalState, dispatch] = useStoreContext();\n  // the tasks array will need to be set to whatever gets returned from the server\n  let tasks = globalState.notes;\n\n  useEffect(() => {\n    API.getNotes()\n      .then(({ data }) =>\n        dispatch(\n          {\n            type: \"LOAD_TASKS\",\n            payload: data,\n          },\n          []\n        )\n      )\n      .catch((err) => console.log(err));\n  });\n\n  return (\n    <div className=\"componentHolder ml-2\">\n      <div style={{ width: \"100%\" }}>\n        <NewTask />\n        <Accordion>\n          <Task tasks={tasks} />\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n\nexport default TasksContainer;\n","import React, { useRef, useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport API from \"../utils/API\";\nimport \"./Style.css\";\n\nfunction NewLead() {\n  // eslint-disable-next-line\n  const [globalState, dispatch] = useStoreContext();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const firstnameRef = useRef();\n  const lastnameRef = useRef();\n  const emailRef = useRef();\n  const phoneRef = useRef();\n  const imageRef = useRef();\n\n  const handleNewLead = (e) => {\n    e.preventDefault();\n    API.saveLead({\n      user: globalState.user,\n      first: firstnameRef.current.value,\n      last: lastnameRef.current.value,\n      email: emailRef.current.value,\n      phone: phoneRef.current.value,\n      image: imageRef.current.value,\n    })\n      .then((result) => {\n        dispatch({\n          type: \"ADD_LEAD\",\n          payload: result.data,\n        });\n      })\n      .catch((err) => console.log(err));\n\n    firstnameRef.current.value = \"\";\n    lastnameRef.current.value = \"\";\n    emailRef.current.value = \"\";\n    phoneRef.current.value = \"\";\n    imageRef.current.value = \"\";\n\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button\n        style={{ fontWeight: \"bold\" }}\n        className=\"new-task-button\"\n        variant=\"info\"\n        onClick={handleShow}\n      >\n        New Lead\n      </Button>\n\n      <Modal className=\"lead-modal\" show={show} onHide={handleClose}>\n        <Modal.Header\n          style={{\n            fontWeight: \"bold\",\n            color: \"rgb(3, 73, 94)\",\n            fontFamily: \"Courier New, Courier, monospace\",\n          }}\n          closeButton\n        >\n          Add a Lead\n        </Modal.Header>\n\n        <Form className=\"lead-form\">\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"First Name\"\n              ref={firstnameRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Last Name\"\n              ref={lastnameRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email address\"\n              ref={emailRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Phone number\"\n              ref={phoneRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Image URL\"\n              ref={imageRef}\n              required\n            />\n          </Form.Group>\n        </Form>\n\n        <Modal.Footer>\n          <Button\n            onClick={(e) => {\n              handleNewLead(e);\n            }}\n            variant=\"info\"\n          >\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default NewLead;\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport \"./Style.css\";\n\nfunction EditLead({ client }) {\n  // eslint-disable-next-line\n  const [globalState, dispatch] = useStoreContext();\n  const [show, setShow] = useState(false);\n\n  const firstnameRef = useRef();\n  const lastnameRef = useRef();\n  const emailRef = useRef();\n  const phoneRef = useRef();\n  const imageRef = useRef();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  function handleUpdateLead(id, leadData) {\n    leadData.first = firstnameRef.current.value;\n    leadData.last = lastnameRef.current.value;\n    leadData.email = emailRef.current.value;\n    leadData.phone = phoneRef.current.value;\n    leadData.image = imageRef.current.value;\n\n    API.updateLead(id, leadData).then(({ data }) =>\n      dispatch({\n        type: \"UPDATE_LEAD\",\n        payload: data,\n      })\n    );\n    console.log(globalState.leads);\n\n    handleClose();\n  }\n\n  return (\n    <>\n      <Link onClick={handleShow} style={{ color: \"navy\" }}>\n        Edit Info\n      </Link>\n\n      <Modal className=\"lead-modal\" show={show} onHide={handleClose}>\n        <Modal.Header\n          style={{\n            fontWeight: \"bold\",\n            color: \"rgb(3, 73, 94)\",\n            fontFamily: \"Courier New, Courier, monospace\",\n          }}\n          closeButton\n        >\n          Edit {client.first}'s Information\n        </Modal.Header>\n\n        <Form className=\"lead-form\">\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder={client.first}\n              ref={firstnameRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder={client.last}\n              ref={lastnameRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"email\"\n              placeholder={client.email}\n              ref={emailRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder={client.phone}\n              ref={phoneRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter new image URL\"\n              ref={imageRef}\n              required\n            />\n          </Form.Group>\n        </Form>\n\n        <Modal.Footer>\n          <Button\n            onClick={(e) => {\n              handleUpdateLead(client._id, client);\n            }}\n            variant=\"info\"\n          >\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditLead;\n","import React, { useEffect } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Style.css\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport API from \"../utils/API\";\nimport EditLead from \"./EditLead\"\n\nfunction ClientCard({ client }) {\n  const [globalState, dispatch] = useStoreContext();\n  // Below array of clients is just an illustration for dynamically generated profile cards for each client. Use Global state or somethin'.s\n\n  useEffect(() => {\n    API.getLeads()\n      .then(({ data }) =>\n        dispatch({\n          type: \"LOAD_LEADS\",\n          payload: data,\n        })\n      )\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleRemoveClient(id) {\n    API.deleteLead(id).then(({ data }) =>\n      dispatch({\n        type: \"REMOVE_LEAD\",\n        payload: data,\n      })\n    );\n  }\n\n  return (\n    //   For each client, create a card with their information\n    <>\n      <div className=\"row\">\n        <ul className=\"col-10\" style={{ maxHeight: \"50%\", listStyle: \"none\" }}>\n          <li>Full name: {client.first} {client.last}</li>\n          <br />\n          <li>Email: \n            {\" \"}\n            <a href={\"mailto:\" + client.email}>{client.email}</a>\n            </li>\n          <br />\n          <li>Phone Number: {client.phone}</li>\n        </ul>\n\n        <div className=\"col-2\" style={{ maxHeight: \"50%\" }}>\n          <Image className = \"profile-pic\" src={client.image? client.image : null} thumbnail />\n        </div>\n      </div>\n\n      <Link\n        onClick={() => {\n          handleRemoveClient(client._id);\n        }}\n        style={{ color: \"red\" }}\n      >\n        Remove Client\n      </Link>\n      {\" \"}\n      {\" | \"}\n      {\" \"}\n      <EditLead client= {client}/>\n    </>\n  );\n}\n\nexport default ClientCard;\n","import { Accordion, Card, Button } from \"react-bootstrap\";\nimport \"./Style.css\";\nimport React from \"react\";\nimport ClientCard from \"./ClientCard\";\n\nfunction Client({ clients }) {\n  return (\n    // dynamically generate client row with a check box / button.\n    <>\n      {clients.map((client) => (\n        <Accordion key={client._id}>\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle\n                style={{ color: \"black\", fontSize: \"20px\" }}\n                className=\"client-header\"\n                id={client._id}\n                as={Button}\n                variant=\"link\"\n                eventKey=\"0\"\n              >\n                {client.first} {client.last}\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse\n              style={{ fontSize: \"17px\", color: \" rgb(3, 73, 94)\" }}\n              eventKey=\"0\"\n            >\n              <Card.Body>\n                <ClientCard client={client} />\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      ))}\n    </>\n  );\n}\n\nexport default Client;\n","import React, {useEffect} from 'react'\nimport {Accordion} from 'react-bootstrap'\nimport NewLead from \"./NewLead\"\nimport Client from \"./Client\"\nimport \"./Style.css\";\nimport API from \"../utils/API\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction LeadsContainer() {\n  const [globalState, dispatch] = useStoreContext();\n\n  // the tasks array will need to be set to whatever gets returned from the server\n  let clients = globalState.leads;\n\n  useEffect(() => {\n    API.getLeads()\n      .then(({ data }) =>\n        dispatch({\n          type: \"LOAD_LEADS\",\n          payload: data,\n        })\n      )\n      .catch((err) => console.log(err));\n  }, []);\n\n    return (\n      <div className=\"componentHolder ml-2\">\n        <div style={{ width: \"100%\" }}>\n          <NewLead />\n          <Accordion>\n            <Client clients = {clients} />\n          </Accordion>\n        </div>\n      </div>\n    );\n}\n\nexport default LeadsContainer\n","import React, { useRef, useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport API from \"../utils/API\";\nimport \"./Style.css\";\n\nfunction NewActivity() {\n  // eslint-disable-next-line\n  const [globalState, dispatch] = useStoreContext();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const activityRef = useRef();\n  const titleRef = useRef();\n\n  const handleNewActivity = (e) => {\n    e.preventDefault();\n    API.saveDate({\n      user: globalState.user,\n      date: globalState.selectedDate,\n      title: titleRef.current.value,\n      activity: activityRef.current.value,\n      dateCreated: Date.now(),\n    })\n      .then((result) => {\n        dispatch({\n          type: \"ADD_DATE\",\n          payload: result.data,\n        });\n      })\n      .catch((err) => console.log(err));\n\n    activityRef.current.value = \"\";\n\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button\n        style={{ fontWeight: \"bold\" }}\n        className=\"new-task-button\"\n        variant=\"info\"\n        onClick={handleShow}\n      >\n        New Activity\n      </Button>\n\n      <Modal className=\"activity-modal\" show={show} onHide={handleClose}>\n        <Modal.Header\n          style={{\n            fontWeight: \"bold\",\n            color: \"rgb(3, 73, 94)\",\n            fontFamily: \"Courier New, Courier, monospace\",\n          }}\n          closeButton\n        >\n          Add an Activity\n        </Modal.Header>\n\n        <Form className=\"activity-form\">\n          <Form.Group controlId=\"formGroupTitle\">\n            <Form.Control\n              type=\"text-box\"\n              placeholder=\"Title\"\n              ref={titleRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"ControlTextarea1\" className=\"activity-body\">\n            <Form.Label>Activity</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} ref={activityRef} required />\n          </Form.Group>\n        </Form>\n\n        <Modal.Footer>\n          <Button\n            onClick={(e) => {\n              handleNewActivity(e);\n            }}\n            variant=\"info\"\n          >\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default NewActivity;\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport \"./Style.css\";\n\nfunction EditActivity({ date }) {\n  // eslint-disable-next-line\n  const [globalState, dispatch] = useStoreContext();\n  const [show, setShow] = useState(false);\n\n  const titleRef = useRef();\n  const activityRef = useRef();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  function handleUpdateActivity(id, activityData) {\n    activityData.title = titleRef.current.value;\n    activityData.activity = activityRef.current.value;\n\n\n    API.updateDate(id, activityData).then(({ data }) =>\n      dispatch({\n        type: \"UPDATE_DATE\",\n        payload: data,\n      })\n    );\n    console.log(globalState.dates);\n\n    handleClose();\n  }\n\n  return (\n    <>\n      <Link onClick={handleShow} style={{ color: \"navy\" }}>\n        Edit\n      </Link>\n\n      <Modal className=\"lead-modal\" show={show} onHide={handleClose}>\n        <Modal.Header\n          style={{\n            fontWeight: \"bold\",\n            color: \"rgb(3, 73, 94)\",\n            fontFamily: \"Courier New, Courier, monospace\",\n          }}\n          closeButton\n        >\n          Edit Activity\n        </Modal.Header>\n\n        <Form className=\"lead-form\">\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder={date.title}\n              ref={titleRef}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control as=\"textarea\" rows={3} \n              ref={activityRef}\n              required\n            />\n          </Form.Group>\n\n        </Form>\n\n        <Modal.Footer>\n          <Button\n            onClick={(e) => {\n              handleUpdateActivity(date._id, date);\n            }}\n            variant=\"info\"\n          >\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditActivity;\n","import React from \"react\";\nimport { Accordion, Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Style.css\";\nimport API from \"../utils/API\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport Moment from \"react-moment\";\nimport EditActivity from \"./EditActivity\";\n\nfunction Activity({ dates }) {\n  const [globalState, dispatch] = useStoreContext();\n\n  function handleRemoveDate(id) {\n    API.deleteDate(id).then(({ data }) =>\n      dispatch({\n        type: \"REMOVE_DATE\",\n        payload: data,\n      })\n    );\n  }\n\n  return (\n    // dynamically generate date row with a check box / button.\n    <>\n      {dates.map((date) => (\n        <Accordion key={date._id}>\n          <Card>\n            <Card.Header>\n              <Accordion.Toggle\n                style={{ color: \"black\", fontSize: \"20px\" }}\n                className=\"date-header\"\n                id={date._id}\n                as={Button}\n                variant=\"link\"\n                eventKey=\"0\"\n              >\n                {date.title}\n              </Accordion.Toggle>\n\n              {/* EDIT AND DELETE BUTTONS HERE */}\n            </Card.Header>\n            <Accordion.Collapse\n              style={{ fontSize: \"17px\", color: \"rgb(3, 73, 94)\" }}\n              eventKey=\"0\"\n            >\n              <Card.Body>\n                <Card.Subtitle className=\"text-muted mb-4\">\n                  Date Created:{\" \"}\n                  <Moment format=\"ddd MM/DD/YY\">{date.dateCreated}</Moment> at{\" \"}\n                  <Moment format=\"hh:mm a\">{date.dateCreated}</Moment>\n                </Card.Subtitle>\n                <Card.Text>{date.activity}</Card.Text>\n                <Link value=\"stuff\"\n                  onClick={() => {\n                    handleRemoveDate(date._id);\n                  }}\n                  style={{ color: \"red\" }}\n                >\n                  Delete\n                </Link>{\" \"}\n                {\" | \"} <EditActivity date={date} />\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      ))}\n    </>\n  );\n}\n\nexport default Activity;\n","import React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction MiniCalendar() {\n  const [globalState, dispatch] = useStoreContext();\n\n  const [date, setDate] = useState(new Date());\n\n  const onChange = (date) => {\n    setDate(date)\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: \"SELECTED_DATE\",\n      payload: date.toDateString(),\n    });\n  }, [date]);\n\n  \n\n  return (\n    <div className=\"componentHolder ml-2\">\n      <div style={{ width: \"100%\" }}>\n        <Calendar onChange={onChange} value={date} />\n      </div>\n    </div>\n  );\n}\n\nexport default MiniCalendar;\n","import React, { useEffect } from \"react\";\nimport { Accordion } from \"react-bootstrap\";\nimport NewActivity from \"./NewActivity\";\nimport Activity from \"./Activity\";\nimport API from \"../utils/API\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport MiniCalendar from \"../components/MiniCalendar\";\n\nfunction ActivityContainer() {\n  const [globalState, dispatch] = useStoreContext();\n\n  // the dates array will need to be set to whatever gets returned from the server\n  let dates = globalState.dates;\n\n  useEffect(() => {\n    API.getDates()\n      .then(({ data }) =>\n        dispatch(\n          {\n            type: \"LOAD_DATES\",\n            payload: data,\n          },\n          []\n        )\n      )\n      .catch((err) => console.log(err));\n  });\n\n  return (\n    <div className=\"componentHolder ml-2\">\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"60vw\" }}>\n          <NewActivity />\n          <Accordion>\n            <Activity dates={dates} />\n          </Accordion>\n        </div>\n        <div style={{float: \"right\"}}>\n        <MiniCalendar />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ActivityContainer;\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport UserProfile from \"../components/UserProfile\";\nimport Footer from \"../components/Footer\";\nimport TasksContainer from \"../components/TasksContainer\";\nimport { StoreProvider } from \"../utils/GlobalState\";\nimport LeadsContainer from \"../components/LeadsContainer\";\nimport \"../components/Style.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ActivityContainer from \"../components/ActivityContainer\";\n\nfunction Home() {\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <Header title=\"Office Space\" tag=\"I'll burn the building down\" />\n        <div className=\"main-display-row\">\n          <UserProfile />\n          <Route path=\"/home/taskscomponents\" component={TasksContainer} />\n          <Route path=\"/home/leadcomponents\" component={LeadsContainer} />\n          <Route\n            path=\"/home/calendarcomponents\"\n            component={ActivityContainer}\n          />\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default Home;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP__APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\nlet app = firebase.initializeApp(firebaseConfig);\nlet db = app.firestore();\n\nexport function auth() {\n  return app.auth();\n}\n\nexport default db;\n","import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction SignOut() {\n  const [globalState, dispatch] =useStoreContext();\n  let [succesful, setSuccessful] = useState(false);\n\n\n  useEffect(() => {\n    dispatch({\n      type: \"SET_USER\",\n      payload: \"\",\n    });\n  }, [succesful]);\n\n  useEffect(() => {\n    auth()\n      .signOut()\n      .then(() => {\n        setSuccessful(true);\n      });\n  }, []);\n\n  if (succesful) {\n    return <Redirect to=\"/home\" />;\n  } else {\n    return <h1>\"Signing you out..\"</h1>;\n  }\n}\n\nexport default SignOut;\n","import React, { useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { Form, Container, Card, Col, Button } from \"react-bootstrap\";\nimport \"./Style.css\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction SignIn() {\n  const [globalState, dispatch] = useStoreContext();\n  let [credentials, SetCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  let [signUp, setSignUp] = useState(false);\n  let [isSignedIn, setIsSignedIn] = useState(false);\n\n  let [errorMessage, setErrorMessage] = useState(\"\");\n\n  async function handleSignIn(e) {\n    e.preventDefault();\n\n    try {\n      await auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      );\n    } catch ({ message }) {\n      setErrorMessage(message);\n    }\n  }\n\n  async function handleSignUp(e) {\n    e.preventDefault();\n    try {\n      await auth().createUserWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      );\n    } catch ({ message }) {\n      setErrorMessage(message);\n    }\n  }\n\n  function handleInputChange(e) {\n    // Getting the value and name of the input which triggered the change\n    const { name, value } = e.target;\n\n    // Updating the input's state\n    SetCredentials({\n      ...credentials,\n      [name]: value,\n    });\n  }\n\n  if (!signUp) {\n    return (\n      <Container className=\"login-container\">\n        <Card\n          style={{\n            borderRadius: \"15px\",\n            boxShadow: \"0 0 10px whitesmoke\",\n            background: \"whitesmoke\",\n          }}\n          className=\"login-card\"\n        >\n          {errorMessage}\n          <Form className=\"login-form\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={credentials.email}\n                onChange={handleInputChange}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                value={credentials.password}\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n            <Button\n              style={{ backgroundColor: \"rgb(3, 73, 94)\" }}\n              type=\"submit\"\n              onClick={handleSignIn}\n            >\n              Log In\n            </Button>\n\n            <Button\n              style={{ float: \"right\", backgroundColor: \"rgb(3, 73, 94)\" }}\n              type=\"submit\"\n              onClick={() => {\n                setSignUp(true);\n              }}\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Card>\n      </Container>\n    );\n  } else {\n    return (\n      <Container className=\"signup-container\">\n        <Card\n          style={{\n            borderRadius: \"15px\",\n            boxShadow: \"0 0 10px whitesmoke\",\n            background: \"whitesmoke\",\n          }}\n          className=\"signup-card\"\n        >\n          <Form onSubmit={handleSignUp} className=\"signup-form\">\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\">\n                <Form.Label>Enter your Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={credentials.email}\n                  onChange={handleInputChange}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>Choose a Password</Form.Label>\n                <Form.Control\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={credentials.password}\n                  onChange={handleInputChange}\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Button\n                className=\"create-button\"\n                style={{ backgroundColor: \"rgb(3, 73, 94)\" }}\n                type=\"submit\"\n                onClick={handleSignUp}\n              >\n                Create account\n              </Button>\n            </Form.Row>\n\n            <Form.Row>\n              <Button\n                className=\"signup-buttons\"\n                style={{ float: \"right\", backgroundColor: \"rgb(3, 73, 94)\" }}\n                type=\"submit\"\n                onClick={() => {\n                  setSignUp(false);\n                }}\n              >\n                Already Have an Account?\n              </Button>\n            </Form.Row>\n          </Form>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport SignIn from \"../components/SignIn\";\nimport Footer from \"../components/Footer\";\n\nfunction Signup() {\n  return (\n    <div style={{ position: \"relative\", height: \"100%\" }}>\n      <Header title=\"Office Space\" tag=\"I'll burn the building down\" />\n      <SignIn />\n      <div style={{position: \"fixed\", bottom: \"0\"}}>\n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport SignOut from \"./components/SignOut\";\nimport { auth } from \"./firebase\";\nimport Signup from \"./pages/Signup\";\nimport { useStoreContext } from \"./utils/GlobalState\";\n\nfunction App() {\n  const [globalState, dispatch] = useStoreContext();\n  const [localUser, setLocalUser] = useState();\n\n  auth().onAuthStateChanged((user) => {\n    if (user) {\n      setLocalUser(user.email);\n    } else setLocalUser(\"\");\n  });\n\n  useEffect(() => {\n    dispatch({\n      type: \"SET_USER\",\n      payload: localUser,\n    });\n  }, [localUser]);\n\n  if (!localUser) {\n    return (\n      <Switch>\n        <Route exact path=\"/home\" component={Signup} />\n        <Route exact path=\"/signout\" component={SignOut} />\n      </Switch>\n    );\n  } else {\n    return (\n      <Switch>\n        <Route path=\"/home\" component={Home} />\n        <Route exact path=\"/signout\" component={SignOut} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { StoreProvider } from \"./utils/GlobalState\";\n\nReactDOM.render(\n  <Router>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}